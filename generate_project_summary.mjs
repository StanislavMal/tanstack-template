import fs from 'fs';
import path from 'path';

// Функция для чтения содержимого файла
function readFileContent(filePath) {
  try {
    return fs.readFileSync(filePath, 'utf-8');
  } catch (error) {
    console.error(`Ошибка при чтении файла "${filePath}":`, error.message);
    return ''; // Возвращаем пустую строку, если файл не найден или произошла ошибка
  }
}

// Основная функция для генерации текста
function generateProjectSummary() {
  // Чтение содержимого файлов
  const projectContext = readFileContent(path.join(process.cwd(), 'PROJECT_CONTEXT.md'));
  const supabaseSchema = readFileContent(path.join(process.cwd(), 'SUPABASE_SCHEMA.md'));

  // Формирование финального текста
  const outputText = `
Это мой проект, над которым я работаю:
${projectContext}

Структура и дополнительная информация по базе данных:
${supabaseSchema}

Готов моим гидом по моему проекту, а также помогать мне заниматься улучшением и разработкой дополнительных функций и улучшений? Жду от тебя профессионального качественного, аккуратного и внимательного подхода.
Для начала, хочу максимально заверить что модели gemini-2.5-flash и gemini-2.5-pro абсолютно новые и протестированные, приложение уже работает на них.
Теперь о нашем взаимодействии, важно что когда ты предлагаешь мне менять файл с кодом - я прошу передавать мне полный (не сокращенный) код файла, чтобы не случилось ошибок с моей стороны, и к тому же гораздо удобнее сразу же целиком заменять файл. Исключения могут быть только если изменения потребуют замены - одной двух строк кода, при этом будет ясно понятно, где именно происходит замена.
Также, если изменения проекта слишком объемные и затронут множество файлов, и ты понимаешь что не сможешь заключить все это в одном сообщении, то разбей ответ на две или даже три части, и когда окончил первую часть напиши продолжение в следующем сообщении, я напишу "продолжай" и ты пришлешь следующую часть.

Теперь, с чего мы начнем:

- Дай небольшой фидбэк по проекту.
`;

  // Запись результата в файл
  const outputPath = path.join(process.cwd(), 'project_summary.txt');
  try {
    fs.writeFileSync(outputPath, outputText.trim(), 'utf-8');
    console.log(`Файл успешно создан: ${outputPath}`);
  } catch (error) {
    console.error('Ошибка при записи файла:', error.message);
  }
}

// Запуск скрипта
generateProjectSummary();