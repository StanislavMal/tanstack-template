// üìÑ src/i18n.ts (–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)

import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

// -> –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞–ø—Ä—è–º—É—é, –∫–∞–∫ —Ä–µ—Å—É—Ä—Å—ã
import translationEN from './locales/en/translation.json';
import translationRU from './locales/ru/translation.json';

const resources = {
  en: {
    translation: translationEN,
  },
  ru: {
    translation: translationRU,
  },
};

i18n
  // -> –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º HttpBackend, —Ç–∞–∫ –∫–∞–∫ —Ä–µ—Å—É—Ä—Å—ã —Ç–µ–ø–µ—Ä—å –≤—Å—Ç—Ä–æ–µ–Ω—ã
  // .use(HttpBackend) 
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources, // -> –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –Ω–∞–ø—Ä—è–º—É—é
    fallbackLng: 'ru',
    supportedLngs: ['en', 'ru'],
    debug: import.meta.env.DEV,

    detection: {
      order: ['localStorage', 'navigator'],
      caches: ['localStorage'],
    },
    
    interpolation: {
      escapeValue: false, 
    },

    // -> –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–∏ –æ–ø—Ü–∏–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ SSR
    // –ù–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å —è–∑—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ 'lng'
    // (–≤–∞–∂–Ω–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø—ã—Ç–∞–ª—Å—è —á—Ç–æ-—Ç–æ –¥–æ–≥—Ä—É–∂–∞—Ç—å)
    react: {
      useSuspense: false, 
    },
    // –ù–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    partialBundledLanguages: true,
  });

export default i18n;