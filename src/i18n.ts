// üìÑ src/i18n.ts (–ù–æ–≤–∞—è, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞–ø—Ä—è–º—É—é, –∫–∞–∫ —Ä–µ—Å—É—Ä—Å—ã
import translationEN from './locales/en/translation.json';
import translationRU from './locales/ru/translation.json';

const resources = {
  en: {
    translation: translationEN,
  },
  ru: {
    translation: translationRU,
  },
};

const i18nInstance = i18n
  .use(initReactI18next);

// -> –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
if (!import.meta.env.SSR) {
  i18nInstance.use(LanguageDetector);
}

i18nInstance.init({
    resources, 
    // -> –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallbackLng, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π.
    // –ù–∞ –∫–ª–∏–µ–Ω—Ç–µ `lng` –±—É–¥–µ—Ç `undefined`, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç LanguageDetector'—É —Å—Ä–∞–±–æ—Ç–∞—Ç—å.
    lng: import.meta.env.SSR ? 'ru' : undefined,
    fallbackLng: 'ru',
    supportedLngs: ['en', 'ru'],
    debug: import.meta.env.DEV,

    detection: {
      order: ['localStorage', 'navigator'],
      caches: ['localStorage'],
    },
    
    interpolation: {
      escapeValue: false, 
    },

    react: {
      useSuspense: false, 
    },

    partialBundledLanguages: true,
  });

export default i18n;