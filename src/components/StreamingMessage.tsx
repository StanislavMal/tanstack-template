// üìÑ src/components/StreamingMessage.tsx

import { memo } from 'react';

interface StreamingMessageProps {
  content: string;
}

/**
 * –õ–µ–≥–∫–æ–≤–µ—Å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∏–º—è—â–µ–≥–æ—Å—è —Ç–µ–∫—Å—Ç–∞.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ—Å—Ç–æ–π whitespace-pre-wrap –≤–º–µ—Å—Ç–æ —Ç—è–∂—ë–ª–æ–≥–æ Markdown –ø–∞—Ä—Å–∏–Ω–≥–∞.
 * –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π ChatMessage.
 */
export const StreamingMessage = memo(({ content }: StreamingMessageProps) => {
  return (
    <div className="group relative flex flex-col w-full items-start">
      <div className="isolate rounded-lg px-4 py-2 transition-colors duration-200 w-full bg-gradient-to-r from-orange-500/5 to-red-600/5">
        <div className="prose dark:prose-invert max-w-none">
          {/* ‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ */}
          <div className="text-sm text-gray-200 whitespace-pre-wrap">
            {content}
            {/* –ú–∏–≥–∞—é—â–∏–π –∫—É—Ä—Å–æ—Ä */}
            <span className="inline-block w-1.5 h-4 ml-0.5 bg-orange-500 animate-pulse" />
          </div>
        </div>
      </div>
      <div className="h-6 mt-1.5 px-2"></div>
    </div>
  );
}, (prev, next) => prev.content === next.content);

StreamingMessage.displayName = 'StreamingMessage';